server:
  port: 9527
spring:
  application:
    name: cloud-gateway
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    gateway:
      routes:
        - id: consumer_router
          uri: lb://cloud-consumer # 三种方式
          predicates:
            - Path=/consumer/** # 断言，路径匹配的进行路由，追加在目标uri后面
        - id: provider_router
          uri: lb://cloud-provider # 三种方式
          predicates:
            - Path=/provider/** # 断言，路径匹配的进行路由，追加在目标uri后面
      enabled: true
      discovery:
        locator:
          lower-case-service-id: true
          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名称进行路由
    sentinel:
      eager: true
      transport:
        dashboard: 127.0.0.1:8080
      datasource:
        #名称随意
        gw-flow:
          nacos:
            server-addr: 127.0.0.1:8848
            # 都是在 sentinel源码持久化改造中的规则名称，需要对应NacosConfigUtil
            dataId: ${spring.application.name}-getway-flow-rules
            groupId: SENTINEL_GROUP
            rule-type: gw-flow # type对应org.springframework.cloud.alibaba.sentinel.datasource.RuleType
        #分组规则
        gw-api-group:
          nacos:
            server-addr: 127.0.0.1:8848
            dataId: ${spring.application.name}-getway-api-rules # 在修改的sentinel 源码中定义的规则名
            groupId: SENTINEL_GROUP
            rule-type: gw-api-group
#      filter:
#        enabled: false #不启用实例webmvc.SentinelWebInterceptor.

#第一种：ws(websocket)方式: uri: ws://localhost:9000
#第二种：http方式: uri: http://localhost:8130/
#第三种：lb(注册中心中服务名字)方式: uri: lb://brilliance-consumer
feign:
  sentinel:
    enabled: true
